x-mysql-service: &mysql-service
  image: mysql:8.3.0
  networks:
    - backend

x-spring-service: &spring-service
  depends_on:
    - eureka-server
    - api-gateway
  networks:
    - backend
  deploy:
    resources:
      limits:
        cpus: '0.50'
        memory: 256M


services:
  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka_server
      dockerfile: eureka_server.Dockerfile
    ports:
      - "8761:8761"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/eureka/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  api-gateway:
    container_name: api-gateway
    build:
      context: ./api_gateway
      dockerfile: api_gateway.Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M

  admin-user-service:
    container_name: admin-user-service
    build:
      context: ./admin_user_service
      dockerfile: admin_user_service.Dockerfile
    <<: *spring-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://admin-user-db:3306/adminUserDB
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "8085:8085"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/health"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - admin-user-db

  admin-user-db:
    container_name: admin-user-db
    <<: *mysql-service
    environment:
      MYSQL_DATABASE: adminUserDB
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD", "mysql_isready", "-U", "${MYSQL_USERNAME}", "-d", "adminUserDB"]
    ports:
      - "3316:3306"
    volumes:
      - admin_user_service_db_data:/var/lib/mysql

  guest-user-service:
    container_name: guest-user-service
    build:
      context: ./guest_user_service
      dockerfile: guest_user_service.Dockerfile
    <<: *spring-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://guest-user-db:3306/guestUserDB
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "8086:8086"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - guest-user-db

  guest-user-db:
    container_name: guest-user-db
    <<: *mysql-service
    environment:
      MYSQL_DATABASE: guestUserDB
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD", "mysql_isready", "-U", "${MYSQL_USERNAME}", "-d", "guestUserDB"]
    ports:
      - "3326:3306"
    volumes:
      - guest_user_service_db_data:/var/lib/mysql

  place-service:
    container_name: place-service
    build:
      context: ./place_service
      dockerfile: place_service.Dockerfile
    <<: *spring-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://place-db:3306/placeDB
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "8087:8087"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8087/health"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - place-db

  place-db:
    container_name: place-db
    <<: *mysql-service
    environment:
      MYSQL_DATABASE: placeDB
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD", "mysql_isready", "-U", "${MYSQL_USERNAME}", "-d", "placeDB"]
    ports:
      - "3336:3306"
    volumes:
      - place_service_db_data:/var/lib/mysql

  reservation-service:
    container_name: reservation-service
    build:
      context: ./reservation_service
      dockerfile: reservation_service.Dockerfile
    <<: *spring-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://reservation-db:3306/reservationDB
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "8088:8088"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - reservation-db

  reservation-db:
    container_name: reservation-db
    <<: *mysql-service
    environment:
      MYSQL_DATABASE: reservationDB
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD", "mysql_isready", "-U", "${MYSQL_USERNAME}", "-d", "reservationDB"]
    ports:
      - "3346:3306"
    volumes:
      - reservation_service_db_data:/var/lib/mysql

volumes:
  admin_user_service_db_data:
  guest_user_service_db_data:
  place_service_db_data:
  reservation_service_db_data:

networks:
  backend:
    driver: bridge